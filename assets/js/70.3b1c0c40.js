(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{587:function(a,t,s){"use strict";s.r(t);var e=s(8),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("说起 node,大家都很熟悉了,随着 node 一起下载安装的还有我们的包管理工具"),s("code",[a._v("npm")]),a._v("(node package manager).我们平时也是一直在使用 npm 的,但大部分时候,我们使用的都是别人的包.假如有一天我们自己写了一个包,想要上传到 npm 上面去,流程是怎么样的?")]),a._v(" "),s("h2",{attrs:{id:"创建项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[a._v("#")]),a._v(" 创建项目")]),a._v(" "),s("p",[a._v("创建一个文件夹并且进入这个文件夹")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mkdir publish-test && cd $_\n")])])]),s("h2",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[a._v("#")]),a._v(" 初始化")]),a._v(" "),s("p",[a._v("初始化生成一个 package\n我用的是 yarn,初始化命令如下:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("yarn init\n")])])]),s("p",[a._v("大家如果用的是 npm 的话就是:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm init\n")])])]),s("p",[a._v("一步步的将配置信息填入,也可以直接使用下面的命令快速生成")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("yarn init -y\n")])])]),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225095600904.png",alt:"当前项目结构"}})]),a._v(" "),s("p",[s("strong",[a._v("注意:这里的包名是不能和 npm 上的包有重复的,有时候包名相似的话 npm 也是会提醒你的,可以去 npm 官方搜索你的包名,看是否已经被使用了")])]),a._v(" "),s("h2",{attrs:{id:"包内容编写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包内容编写"}},[a._v("#")]),a._v(" 包内容编写")]),a._v(" "),s("p",[a._v("新建一个 index.js 文件,随便写一句代码,比如:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h2",{attrs:{id:"准备发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备发布"}},[a._v("#")]),a._v(" 准备发布")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm 官方地址"),s("OutboundLink")],1),a._v(" 点击官方地址去注册,并且通过邮箱的验证,若是不通过验证的话,后面的发布流程会提示你去验证,\n注册好 npm 账号以后,我们的发布流程就正式开始了.第一次发布的话,我们要使用如下命令:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm adduser\n")])])]),s("p",[a._v("以后的话,可以使用")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm login\n")])])]),s("p",[a._v("在输入完 npm adduser 之后,就要求输入用户名/密码/邮箱,结果输入完以后出现了一个报错")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("409 Conflict - PUT http://registry.npm.taobao.org/-/user/org.couchdb.user:ezlou - [conflict] User ezlou already exists\n")])])]),s("p",[a._v("这是因为我们目前的 npm 源是淘宝镜像,淘宝镜像是不允许我们上传自己包的,所以我们要切回原先的 npm 的镜像,如何查看当前的源:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm config get registry\n")])])]),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225101129505.png",alt:"当前源是淘宝镜像"}})]),a._v(" "),s("p",[a._v("可以看到我们当前源是淘宝镜像,我们需要将其切换到原先的源")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm config set registry https://registry.npmjs.org\n")])])]),s("p",[a._v("切换完以后,重新登录,出现了如下的提示,说明登录成功\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225101730542.png",alt:"登录成功"}})]),a._v(" "),s("h2",{attrs:{id:"发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布"}},[a._v("#")]),a._v(" 发布")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm publish\n")])])]),s("p",[a._v("出现如下图所示:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225101859553.png",alt:"发布成功"}})]),a._v(" "),s("p",[a._v("可以看到 包名+版本 显示在终端上了,说明我们的包已经发布成功了,然后我们去 npm 个人中文看自己发布的包 "),s("a",{attrs:{href:"https://www.npmjs.com/settings/xxx/packages",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.npmjs.com/settings/xxx/packages"),s("OutboundLink")],1),a._v(" 这里将 xxx 替换成自己的用户名")]),a._v(" "),s("h4",{attrs:{id:"可能会踩到的坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可能会踩到的坑"}},[a._v("#")]),a._v(" 可能会踩到的坑")]),a._v(" "),s("p",[a._v("如下图:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225103900189.png",alt:"没有权限"}})]),a._v(" "),s("p",[a._v("说明你没有发布这个包的权限,很有可能就是因为你的包名和别人的包名重复了.我们修改下包名,在其后面加上一个 2,然后继续发布")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019122510425146.png",alt:"包名过于相似的报错"}})]),a._v(" "),s("p",[a._v("这时候可能会提示包名过于类似,并且它建议我们可以使用 "),s("code",[a._v("@我们的用户名/包名")]),a._v(" 这样的格式去发布自己的包.并且发布的时候命令变成了")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm publish --access=public\n")])])]),s("p",[a._v("这句话的意思是将我们发布的包变成一个公开包,让大家都能访问到.因为现在我们的包名是 "),s("code",[a._v("@我们的用户名/包名")]),a._v(" 这种格式,这种以用户名自己名字开头的包默认是当作私有包的,而私有包是需要收费的,所以如果这时候我们不加上后面的修饰的话,就会出现如下的报错:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191225104754347.png",alt:"这是一个付费功能啊"}})]),a._v(" "),s("p",[a._v("我们加上 "),s("code",[a._v("--access=public")]),a._v(",将其变成一个公开包,重新发布一下,可以看到发布成功了!\n自此,我们自己的包就发布成功了,过一会儿别人就可以通过命令下载安装我们的包了")]),a._v(" "),s("h2",{attrs:{id:"更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[a._v("#")]),a._v(" 更新")]),a._v(" "),s("p",[a._v("如果我们的代码有了更新,我们可以重新将包发布到 npm 上去,但是注意,包的版本号必须和之前是不一样的,npm 不允许上传相同版本的包.这里更新包版本也有两种方式")]),a._v(" "),s("ol",[s("li",[a._v("直接在 package.json 中手动修改包的版本")]),a._v(" "),s("li",[a._v("通过 npm 指令来修改")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm version patch  //补丁版本,最后一位数加1\nnpm version minor  //增加了新功能 中间的数字加1\nnpm version major //大改动,不向下兼容 第一位数字加1\n")])])]),s("p",[a._v("我们根据这次包的修改内容,来决定我们这次更新的版本号")]),a._v(" "),s("h2",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),s("p",[a._v("假如我们要删除自己发布的包的话,使用下面的命令")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm unpublish --force\n")])])]),s("p",[s("strong",[a._v("注意:只有在发布的 24 小时内可以删除包")])]),a._v(" "),s("p",[a._v("基本上,一个包的发布流程就是以上这些啦!")])])}),[],!1,null,null,null);t.default=n.exports}}]);