(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{562:function(t,s,a){"use strict";a.r(s);var e=a(8),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("我们知道 NodeJS 遵循 "),a("code",[t._v("CommonJS")]),t._v(" 的规范,使用"),a("code",[t._v("require")]),t._v("关键字来加载模块,使用 "),a("code",[t._v("exports")]),t._v(" 和 "),a("code",[t._v("module.exports")]),t._v(" 来导出模块,那么这两个导出又有什么关系或者区别呢?")])]),t._v(" "),a("p",[t._v("其实,在 node 执行一个文件时,会给这个文件内生成一个 "),a("code",[t._v("exports")]),t._v(" 对象和一个 "),a("code",[t._v("module")]),t._v(" 对象,而这个"),a("code",[t._v("module")]),t._v(" 对象又有一个属性叫做 "),a("code",[t._v("exports")])]),t._v(" "),a("p",[t._v("新建一个 index.js 文件 执行 "),a("code",[t._v("node index.js")]),t._v(" 命令")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("可以看出控制台的输出结果如下:\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200302152831257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21vZ3V6aGFsZQ==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n我们再来看看 "),a("code",[t._v("exports")]),t._v(" 和 "),a("code",[t._v("module.exports")]),t._v(" 有什么关系呢?\n我们在 index.js 文件中添加一句代码")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("会发现结果是 "),a("code",[t._v("true")]),t._v(" 这说明,文件开始执行的时候,它们是指向同一块内存区域的\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/3/1709df85ab1f6fd6?w=412&h=180&f=png&s=8444",alt:""}})]),t._v(" "),a("p",[t._v("当文件执行完毕的时候,只有"),a("code",[t._v("module.exports")]),t._v(" 变量被返回了,以便后续被其他模块 "),a("code",[t._v("require")]),t._v(" 引用,为了证明这个观点,我们可以新建一个文件 index2.js 进行测试")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//index2.js")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("然后在 index3.js 中引用")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//index3.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" module2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("控制台输出: "),a("code",[t._v("{ a: 1 }")]),t._v("\n然后我们在 index2.js 中添加代码:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//index2.js")]),t._v("\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这里同时使用两个导出方法,查看控制台输出结果为 "),a("code",[t._v("{ b: 2 }")]),t._v("\n此时,我们继续在 index2.js 文件中添加")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("结果为"),a("code",[t._v("false")]),t._v(",此时的 "),a("code",[t._v("exports")]),t._v(" 和 "),a("code",[t._v("module.exports")]),t._v(" 已经不是指向同一块内存地址了,因为前面的代码里面,我们使用了")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这导致了 "),a("code",[t._v("module.exports")]),t._v("重新指向了新的内存地址, 但是当我们执行 "),a("code",[t._v("node index3.js")]),t._v(" 查看 index3.js 的运行结果时,看到的是 "),a("code",[t._v("{b:2}")]),t._v(" 而不是 "),a("code",[t._v("{a:1}")]),t._v(" 证明了我们上面的观点: 只有"),a("code",[t._v("module.exports")]),t._v(" 变量被返回了\n因此,初始化的状态,我们可以用如下代码来帮助理解:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  exports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n")])])]),a("p",[t._v("而最终的导出结果是 "),a("code",[t._v("module.exports")]),t._v(" 这个对象.\n到了这里,可能有人又会有疑问,为啥之前很多的模块都是需要引入才能使用,但是"),a("code",[t._v("exports")]),t._v("和"),a("code",[t._v("module.exports")]),t._v(" 我们没有引用却能直接使用?\n这个问题的答案我们可以从 Node 的官方文档中找到答案, "),a("a",{attrs:{href:"https://nodejs.org/dist/latest-v13.x/docs/api/modules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门在此"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200302162045507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21vZ3V6aGFsZQ==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("这里,Node 的官方文档里面提到, NodeJS 应用在文件被执行前会被包装一层:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在进行了头尾封装后,各模块之间进行了作用域的隔离,避免了污染全局变量,通过头尾封装,实现了")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("保持顶层变量（用 var、 const 或 let 定义）作用在模块范围内，而不是全局对象。")]),t._v(" "),a("li",[t._v("提供一些看似全局的但实际上是模块特定的变量")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("+ 实现了从模块中导出值的 module 和 exports 对象\n+ 包含模块绝对文件名(__filename)和目录路径(__dirname)的快捷变量\n")])])]),a("p",[a("strong",[t._v("总结:")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("exports")]),t._v(" 对象是 "),a("code",[t._v("module")]),t._v(" 对象的一个属性,在初始时 "),a("code",[t._v("module.exports")]),t._v(" 和 "),a("code",[t._v("exports")]),t._v(" 指向同一块内存区域")]),t._v(" "),a("li",[t._v("模块导出的是 "),a("code",[t._v("module.exports")]),t._v(" , "),a("code",[t._v("exports")]),t._v(" 只是对它的引用,在不改变"),a("code",[t._v("exports")]),t._v(" 内存的情况下,修改"),a("code",[t._v("exports")]),t._v(" 的值可以改变 "),a("code",[t._v("module.exports")]),t._v(" 的值")]),t._v(" "),a("li",[t._v("导出时尽量使用 "),a("code",[t._v("module.exports")]),t._v(" ,以免因为各种赋值导致的混乱")])])])}),[],!1,null,null,null);s.default=n.exports}}]);